<?xml version="1.0" encoding="utf-8"?>
<s:Group xmlns:fx="http://ns.adobe.com/mxml/2009" 
		  xmlns:s="library://ns.adobe.com/flex/spark" 
		  xmlns:mx="library://ns.adobe.com/flex/mx">
	<fx:Script>
		<![CDATA[
			import main.flex.com.sxm.weatherMap.core.models.constants.ResourceManagerConstants;
			import main.flex.com.sxm.weatherMap.core.models.presentation.WeatherReportPresentationModel;
			
			[Bindable]
			[Inject]
			public var presentationModel:WeatherReportPresentationModel;
			
			/**
			 * Initializes the view objects, data, event istenerts, references
			 * 
			 * @param	none
			 * @return	void
			 * */
			[PostConstruct]
			public function setUp():void
			{	
				presentationModel.setup();
			}
			
			/**
			 * Cleans up the view objects, data, event istenerts, references
			 * 
			 * @param	none
			 * @return	void
			 * */
			[PreDestroy]
			public function cleanUp():void
			{
				presentationModel.destroy();
			}
			
			/**
			 * Transforms the UI layout and initiate the process of weathere report data load
			 * 
			 * @param	none
			 * @return	void
			 */
			private function getWeatherReport():void
			{
				grpTitle.addElement(btnGetWeatherReportData);
				grpTitle.addElement(lblStatus);
				
				grpReport.includeInLayout = true;
				grpControlButtons.includeInLayout = false;
				
				presentationModel.getWeatherReport();				
			}
		]]>
	</fx:Script>
	
	<!-- BG art -->
	<s:Rect width="100%" height="100%">
		<s:fill>
			<s:SolidColor color="0x2b2b2b"/>
		</s:fill>
		<s:stroke>
			<s:SolidColorStroke color="0x808080" weight="1"/>
		</s:stroke>
	</s:Rect>
	
	<s:VGroup height="100%" width="100%"
			  paddingLeft="10" paddingRight="10" paddingTop="10" paddingBottom="10">
			 
		<s:HGroup id="grpTitle" width="100%"
				  verticalAlign="middle">
			<s:Label id="lblTitle"
					 styleName="weather_report_title"
					 text="{resourceManager.getString(ResourceManagerConstants.RESOURCE_BUNDLE, ResourceManagerConstants.WEATHER_REPORT_TITLE)}"/>
			
			<s:Label id="lblStatus"
					 styleName="weather_report_load_status"
					 text="{presentationModel.reportLoadStatus}"/>
		</s:HGroup>
		
		<s:VGroup id="grpControlButtons" 
				  height="100%" width="100%"
				  horizontalAlign="center" verticalAlign="middle">
			<s:Button id="btnGetWeatherReportData"
					  label="{resourceManager.getString(ResourceManagerConstants.RESOURCE_BUNDLE, ResourceManagerConstants.WEATHER_REPORT_GET_REPORT)}"
					  horizontalCenter="0" verticalCenter="0"
					  enabled="{!presentationModel.weatherReportLoadInProgress}"
					  click="getWeatherReport()"/>
		</s:VGroup>
		
		<s:HGroup id="grpReport" 
				  width="100%" height="100%"
				  includeInLayout="false">
			<s:VGroup height="100%" width="50%">
				<s:Label text="{resourceManager.getString(ResourceManagerConstants.RESOURCE_BUNDLE, ResourceManagerConstants.WEATHER_REPORT_WEEKLY)}"
						 styleName="weather_report_textbox_title"/>
				<s:TextArea id="txtWeeklyReport"
							enabled="{!presentationModel.weatherReportLoadInProgress}"
							text="{presentationModel.weatherReportModel.weeklyWeatherReport}"
							height="100%" width="100%"/>
			</s:VGroup>
			
			<s:VGroup height="100%" width="50%">
				<s:Label text="{resourceManager.getString(ResourceManagerConstants.RESOURCE_BUNDLE, ResourceManagerConstants.WEATHER_REPORT_MONTHLY)}"
						 styleName="weather_report_textbox_title"/>
				<s:TextArea id="txtMonthlyReport"
							enabled="{!presentationModel.weatherReportLoadInProgress}"
							text="{presentationModel.weatherReportModel.monthlyWeatherReport}"
							height="100%" width="100%"/>
			</s:VGroup>
		</s:HGroup>
				
				  
				  
	</s:VGroup>
</s:Group>
